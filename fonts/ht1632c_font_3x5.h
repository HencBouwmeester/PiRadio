#include <inttypes.h>

#ifndef HT1632C_FONT_3X5_H
#define HT1632C_FONT_3X5_H

#define HT1632C_FONT_3X5_WIDTH 3
#define HT1632C_FONT_3X5_HEIGHT 5

/*
 * added to allow fontname to match header file name. 
 * as well as keep the old name for backward compability
 */

static char ht1632c_font_3x5[] = {
    0x0, 0x0, // size of zero indicates fixed width font, actual length is width * height
    0x03, // width
    0x05, // height
    0x20, // first char
    0x5F, // char count
    0B00000000, 0B00000000, 0B00000000, //  
    0B00000000, 0B11101000, 0B00000000, // !
    0B11000000, 0B00000000, 0B11000000, // "
    0B01010000, 0B11111000, 0B01010000, // #
    0B11101000, 0B11111000, 0B10111000, // $
    0B10010000, 0B00100000, 0B01001000, // %
    0B00000000, 0B00000000, 0B00000000, // &
    0B00000000, 0B11000000, 0B00000000, // '
    0B01110000, 0B10001000, 0B00000000, // (
    0B00000000, 0B10001000, 0B01110000, // )
    0B01110000, 0B01110000, 0B01110000, // *
    0B00100000, 0B01110000, 0B00100000, // +
    0B00001000, 0B00010000, 0B00000000, // ,
    0B00100000, 0B00100000, 0B00100000, // -
    0B00001000, 0B00000000, 0B00000000, // .
    0B00010000, 0B00100000, 0B01000000, // /
    0B11111000, 0B10001000, 0B11111000, // 0
    0B01001000, 0B11111000, 0B00001000, // 1
    0B10111000, 0B10101000, 0B11101000, // 2
    0B10101000, 0B10101000, 0B11111000, // 3
    0B11100000, 0B00100000, 0B11111000, // 4
    0B11101000, 0B10101000, 0B10111000, // 5
    0B11111000, 0B10101000, 0B10111000, // 6
    0B10000000, 0B10111000, 0B11000000, // 7
    0B11111000, 0B10101000, 0B11111000, // 8
    0B11101000, 0B10101000, 0B11111000, // 9
    0B00000000, 0B01010000, 0B00000000, // :
    0B00001000, 0B01010000, 0B00000000, // ;
    0B00100000, 0B01010000, 0B10001000, // <
    0B01010000, 0B01010000, 0B01010000, // =
    0B10001000, 0B01010000, 0B00100000, // >
    0B10000000, 0B10101000, 0B11000000, // ?
    0B01110000, 0B11101000, 0B01010000, // @
    0B01111000, 0B10100000, 0B11111000, // A
    0B11111000, 0B10101000, 0B01011000, // B
    0B01110000, 0B10001000, 0B10001000, // C
    0B11111000, 0B10001000, 0B01110000, // D
    0B11111000, 0B10101000, 0B10001000, // E
    0B11111000, 0B10100000, 0B10000000, // F
    0B01110000, 0B10101000, 0B10111000, // G
    0B11111000, 0B00100000, 0B11111000, // H
    0B10001000, 0B11111000, 0B10001000, // I
    0B00010000, 0B10001000, 0B11110000, // J
    0B11111000, 0B01100000, 0B10011000, // K
    0B11111000, 0B00001000, 0B00001000, // L
    0B11111000, 0B01000000, 0B11111000, // M
    0B11111000, 0B10000000, 0B01111000, // N
    0B11110000, 0B10001000, 0B01111000, // O
    0B11111000, 0B10100000, 0B01000000, // P
    0B11110000, 0B10011000, 0B01111000, // Q
    0B11111000, 0B10110000, 0B01001000, // R
    0B01001000, 0B10101000, 0B10010000, // S
    0B10000000, 0B11111000, 0B10000000, // T
    0B11110000, 0B00001000, 0B11111000, // U
    0B11110000, 0B00001000, 0B11110000, // V
    0B11111000, 0B00110000, 0B11111000, // W
    0B11011000, 0B00100000, 0B11011000, // X
    0B11000000, 0B00111000, 0B11000000, // Y
    0B10011000, 0B10101000, 0B11001000, // Z
    0B11111000, 0B10001000, 0B00000000, // [
    0B01000000, 0B00100000, 0B00010000, // backslash
    0B00000000, 0B10001000, 0B11111000, // ]
    0B01000000, 0B10000000, 0B01000000, // ^
    0B00001000, 0B00001000, 0B00001000, // _
    0B00000000, 0B10000000, 0B01000000, // `
    0B01111000, 0B10100000, 0B11111000, // a
    0B11111000, 0B10101000, 0B01011000, // b
    0B01110000, 0B10001000, 0B10001000, // c
    0B11111000, 0B10001000, 0B01110000, // d
    0B11111000, 0B10101000, 0B10001000, // e
    0B11111000, 0B10100000, 0B10000000, // f
    0B01110000, 0B10101000, 0B10111000, // g
    0B11111000, 0B00100000, 0B11111000, // h
    0B10001000, 0B11111000, 0B10001000, // i
    0B00010000, 0B10001000, 0B11110000, // j
    0B11111000, 0B01100000, 0B10011000, // k
    0B11111000, 0B00001000, 0B00001000, // l
    0B11111000, 0B01000000, 0B11111000, // m
    0B11111000, 0B10000000, 0B01111000, // n
    0B11110000, 0B10001000, 0B01111000, // o
    0B11111000, 0B10100000, 0B01000000, // p
    0B11110000, 0B10011000, 0B01111000, // q
    0B11111000, 0B10110000, 0B01001000, // r
    0B01001000, 0B10101000, 0B10010000, // s
    0B10000000, 0B11111000, 0B10000000, // t
    0B11110000, 0B00001000, 0B11111000, // u
    0B11110000, 0B00001000, 0B11110000, // v
    0B11111000, 0B00110000, 0B11111000, // w
    0B11011000, 0B00100000, 0B11011000, // x
    0B11000000, 0B00111000, 0B11000000, // y
    0B10011000, 0B10101000, 0B11001000, // z
    0B00100000, 0B11011000, 0B10001000, // {
    0B00000000, 0B11111000, 0B00000000, // |
    0B10001000, 0B11011000, 0B00100000, // }
    0B00100000, 0B01100000, 0B01000000 // ~
};

#endif
